{
  "hash": "7fdb8612b5a7a0a5a8a6a4393dfbce36",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model Diagnostics\"\nsubtitle: \"Stat 230: Applied Regression Analysis\"\nformat: \n  revealjs:\n    theme: [serif, styles.scss]\neditor: source\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# [PDF version of slides](pdf_slides/04-slr-diagnostics.pdf)\n\n# RMarkdown demo\n\n\n## Conditions required for inference\n\nOur model must be valid for inference to be valid\n\n$y_i = \\beta_0 + \\beta_1 x_i + \\varepsilon_i$ where $\\varepsilon_i \\overset{\\rm iid}{\\sim} N (0, \\sigma^2)$\n\n<br>\n\nConditions to check:\n\n-   Linear relationship is appropriate\n-   Errors are independent and identically distributed (iid)\n-   Errors are normally distributed\n-   Variance of the errors doesn't depend on $x$\n\n\n## Residuals\n\n\n**Definition**: $e_i =\\widehat{\\varepsilon}_i = y_i - \\widehat{y}_i$\n\n<br>\n\n\n**Properties:**\n\n-  sum to zero $\\Longrightarrow$ mean is 0\n\n-  **uncorrelated** with $x$ and $\\widehat{y}$\n\n- normally distributed \n \n- $SD(e_i) = \\widehat{\\sigma} \\sqrt{1 - \\dfrac{1}{n} - \\dfrac{(x_i - \\overline{x})^2}{\\sum (x_i - \\overline{x})^2}}$\n\n\n\n## Standardized residuals\n\n\n$$r_i = \\frac{e_i}{\\widehat{\\sigma} \\sqrt{1 - \\dfrac{1}{n} - \\dfrac{(x_i - \\overline{x})^2}{\\sum (x_i - \\overline{x})^2}}}$$\n\n**Properties:**\n\n-  sum to zero $\\Longrightarrow$ mean is 0\n\n-  **uncorrelated** with $x$ and $\\widehat{y}$\n\n- normally distributed \n\n- $SD(r_i) = 1$\n\n\n\n\n## A \"good\" residual plot\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](04-slr-diagnostics_files/figure-revealjs/unnamed-chunk-1-1.png){width=480}\n:::\n\n::: {.cell-output-display}\n![](04-slr-diagnostics_files/figure-revealjs/unnamed-chunk-1-2.png){width=480}\n:::\n:::\n\n\n## Your turn\n\n- Work in groups\n\n- On the whiteboards, sketch a plot of $y$ vs. $x$ and a corresponding residual plot that would indicate a violation of the\n\n    1. linearity condition\n\n    2. constant variance condition\n    \n    \n\n\n## Assessing normality\n\n- histogram of residuals\n- normal Q-Q plot of residuals\n\n**Examples of \"good\" plots:**\n\n\n\n## Assessing independence\n\n- plot residuals vs. variable inducing dependence (e.g. time, location, subject ID)\n\n**Examples of \"good\" plots:**\n\n\n## Your turn\n\nFILL IN TEXT HERE\n\n\n\n## What happens the conditions aren't valid? {.smaller}\n\n\n\n-   **Linearity:** if nonlinear, everything breaks!\n\n-   **Independence:** estimates are still unbiased (i.e. we fit the right line) but measures of the accuracy of those estimates (the SEs) are typically too small\n\n-   **Normality:** estimates are still unbiased (i.e. we fit the right line), SEs are correct BUT confidence/prediction intervals are wrong (we can't use t-distribution)\n\n-   **Constant error variance:** estimates are still unbiased but standard errors are wrong (and we don't know how wrong)\n\n\n## What do we do if our assumptions are violated?\n\n:::{.incremental}\n1. Change our assumptions (hard, need more stats)\n\n2. Transform $y$, $x$, or both\n\n3. Change the type of inference (remember the bootstrap?)\n:::\n\n\n\n## Transforming variables can\n\n\n\n- Address non-linear patterns (i.e., linear on transformed scale)\n\n- Stabilize variance\n\n- Correct skew\n\n- Minimize the effects of outliers\n\n\n## Applying transformations\n\nTo apply a transformation, we calculate a new variable and use it in place of the original variable in our model\n\n<br>\n\nExamples\n\n$$ \n\\begin{split}\n\\log(y) &= \\beta_0 + \\beta_1 x + \\varepsilon\\\\\ny &= \\beta_0 + \\beta_1 \\sqrt{x} + \\varepsilon\\\\\n\\log(y) &= \\beta_0 + \\beta_1 \\sqrt{x} + \\varepsilon\n\\end{split}\n$$\n\n## Your turn\n\nFILL IN TEXT HERE\n\n\n## Review of logarithms\n\nThe logarithm $\\log_b(x)$ is a function that is the exponent (power) that the base, $b$, must be raised to produce the value $x$:\n\n::: incremental\n- $\\log_{10}(100)=2$ since $10^2 = 100$\n- $\\log_{10}(10)=1$ since $10^1 = 10$\n- $\\log_2(1) = 0$ since $2^0=1$\n- $\\log_2(0.5)=-1$ since $2^{-1}=\\frac{1}{2}$\n:::\n\n## Review of logarithms\n \n- Takes in only positive numbers, i.e. $x>0$\n\n- The log of products is the sum of the logs\n\n    $$\\log_b(mx) = \\log_b(m) + \\log_b(x)$$\n- The log of quotients is the difference of the logs\n    \n    $$\\log_b\\left(\\frac{m}{x}\\right) = \\log_b(m) - \\log_b(x)$$\n\n- The log of powers is the exponent times the log\n    \n    $$\\log_b(x^p) = p \\log_b(x)$$",
    "supporting": [
      "04-slr-diagnostics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}