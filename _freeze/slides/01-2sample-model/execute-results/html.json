{
  "hash": "d409ec7209edf118de0e97ae49a0daaf",
  "result": {
    "markdown": "---\ntitle: \"Writing a statistical model\"\nsubtitle: \"Making connections\"\nauthor: \"Stat 230\"\nformat: revealjs\neditor: visual\n---\n\n\n\n\n## What is a statistical model?\n\n::: incremental\n-   A representation for a particular purpose (Daniel Kaplan)\n\n-   A simplification of reality (Cannon et al., 2010)\n\n-   Embodies a set of assumptions concerning the generation of the observed data, and similar data from a larger population (Wikipedia)\n\n-   Remember that all models are wrong; the practical question is how wrong do they have to be to not be useful (George Box)\n:::\n\n## How to write a statistical model\n\n**observed response = signal + noise**\n\n. . .\n\nsignal:\n\n-   a mathematical function\n\n-   e.g., mean (expectation)\n\n. . .\n\nnoise:\n\n-   a random error term\n\n-   e.g., \"white noise\"\n\n::: aside\nThis is called an *additive model*\n:::\n\n## Examples\n\n::: columns\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-2sample-model_files/figure-revealjs/unnamed-chunk-1-1.png){width=288}\n:::\n:::\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-2sample-model_files/figure-revealjs/unnamed-chunk-2-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n::: columns\n::: {.column width=\"45%\"}\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-2sample-model_files/figure-revealjs/unnamed-chunk-3-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n## Comparing groups\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-2sample-model_files/figure-revealjs/unnamed-chunk-4-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n-   Two Carls collected a random sample of hardcover textbook prices\n\n-   Two disciplinary areas:\n\n    -   Math & Natural Sciences\n    -   Social sciences\n:::\n:::\n\n. . .\n\nIs the average textbook price different between the two areas?\n\n## Writing a two-sample model\n\n::: columns\n::: {.column width=\"40%\"}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 44 × 2\n   Area            Price\n   <fct>           <dbl>\n 1 Math & Science  107. \n 2 Social Sciences 209  \n 3 Social Sciences  15  \n 4 Social Sciences  27.0\n 5 Math & Science  198. \n 6 Math & Science  223. \n 7 Social Sciences  17  \n 8 Social Sciences 139. \n 9 Math & Science  115. \n10 Math & Science   85.4\n# … with 34 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"60%\"}\n**observed response = signal + noise**\n\n::: fragment\n\n$$y_{ij} = \\underbrace{\\mu_i}_{\\rm \\ \\ mean \\\\ response} + \\underbrace{\\varepsilon_{ij}}_{\\rm random \\\\ \\ \\  error}$$\n\n\n::: fragment\n$i =$ group index\n\n$j =$ observation index\n:::\n:::\n:::\n:::\n\n## Two-sample model\n\nLet group 1 = STEM and group 2 = social sciences\n\n. . .\n\n::: columns\n::: {.column width=\"43%\"}\nSTEM model:\n:::\n\n::: {.column width=\"35%\"}\n$y_{1j} = \\mu_1 + \\varepsilon_{1j}$\n:::\n\n::: {.column width=\"15%\"}\n$j=1,\\ldots,n_1$\n:::\n\n:::\n\n. . .\n\n::: columns\n::: {.column width=\"43%\"}\nSocial science model:\n:::\n\n::: {.column width=\"35%\"}\n$y_{2j} = \\mu_2 + \\varepsilon_{2j}$\n:::\n\n::: {.column width=\"15%\"}\n$j=1,\\ldots,n_2$\n:::\n\n:::\n\n\n## Fitting the model\n\nWe don't know the population means for each group, but can estimate them\n\n<br>\n\n$\\widehat{\\mu}_1 = \\frac{1}{n_1} \\sum_{j=1}^{n_1}y_{11} + y_{12} + \\cdots + y_{1n_1} = \\bar{y}_1$\n\n<br>\n\n$\\widehat{\\mu}_2 = \\frac{1}{n_2} \\sum_{j=1}^{n_2}y_{21} + y_{22} + \\cdots + y_{2n_2} = \\bar{y}_2$\n\n## Fitted model\n\nIn `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html}:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(Price ~ Area, data = BookPrices)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Math & Science Social Sciences \n       156.7341         98.9900 \n```\n:::\n:::\n\n\n. . .\n\n<br>\n\nWe can write the fitted model as\n\n$\\widehat{\\mu}_1 = 156.73$\n\n$\\widehat{\\mu}_2 = 98.99$\n\n## Visualizing the model\n\n::: columns\n::: {.column width=\"80%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-2sample-model_files/figure-revealjs/unnamed-chunk-7-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"20%\"}\n<br>\n\n<br>\n\n$\\widehat{\\mu}_1 = 156.73$\n\n<font color = '#E69F00'>$\\widehat{\\mu}_2 = 98.99$</font>\n:::\n:::\n\n## Errors (residuals)\n\nNot all points will fall at the group mean\n\n$\\widehat{\\varepsilon}_{1j} = Y_{1j} - \\widehat{\\mu}_1 = {\\rm observed} - {\\rm fitted}$\n\n$\\widehat{\\varepsilon}_{2j} = Y_{2j} - \\widehat{\\mu}_2$\n\n. . .\n\n<br>\n\n::: callout-note\nWe use the residuals to *estimate* the random errors from the model\n:::\n",
    "supporting": [
      "01-2sample-model_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}