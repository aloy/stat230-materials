{
  "hash": "8e29d65cf3a0b28555173db0f0d98964",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Inference for Prediction\"\nsubtitle: \"Stat 230: Applied Regression Analysis\"\nformat: \n  revealjs:\n    theme: [serif, styles.scss]\neditor: source\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n## Warm up\n\n-   Work with a neighbor\n\n-   Answer the questions associated with the warm up on the worksheet\n\n-   Note that the explanatory variable is standardized <br> (mean 0, SD 1)\n\n## Prediction\n\nThere are two types of predictions in regression\n\n. . .\n\n1.  Predicting the **mean response** at a specific value of $x$\n\n    e.g., the average starting salary for some with a B.A. in statistics\n\n<br>\n\n. . .\n\n2.  Predicting the response for a **specific future observation**\n\n    e.g., predicting **your** starting salary (if you have a B.A. in statistics)\n\n. . .\n\n<br>\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M64 64a64 64 0 1 1 128 0A64 64 0 1 1 64 64zM25.9 233.4C29.3 191.9 64 160 105.6 160h44.8c27 0 51 13.4 65.5 34.1c-2.7 1.9-5.2 4-7.5 6.3l-64 64c-21.9 21.9-21.9 57.3 0 79.2L192 391.2V464c0 26.5-21.5 48-48 48H112c-26.5 0-48-21.5-48-48V348.3c-26.5-9.5-44.7-35.8-42.2-65.6l4.1-49.3zM448 64a64 64 0 1 1 128 0A64 64 0 1 1 448 64zM431.6 200.4c-2.3-2.3-4.9-4.4-7.5-6.3c14.5-20.7 38.6-34.1 65.5-34.1h44.8c41.6 0 76.3 31.9 79.7 73.4l4.1 49.3c2.5 29.8-15.7 56.1-42.2 65.6V464c0 26.5-21.5 48-48 48H496c-26.5 0-48-21.5-48-48V391.2l47.6-47.6c21.9-21.9 21.9-57.3 0-79.2l-64-64zM272 240v32h96V240c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l64 64c9.4 9.4 9.4 24.6 0 33.9l-64 64c-6.9 6.9-17.2 8.9-26.2 5.2s-14.8-12.5-14.8-22.2V336H272v32c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-64-64c-9.4-9.4-9.4-24.6 0-33.9l64-64c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2z\"/></svg>`{=html} Think of two additional examples of each type of prediction.\n\n## Inference for prediction\n\nBest estimate $\\widehat{y}_i = \\widehat{\\beta}_0 + \\widehat{\\beta}_1 x_0$\n\n<br>\n\n. . .\n\nInterval formula: $\\text{estimate} \\pm q \\times \\text{SE}$\n\n-   $\\widehat{y}$ is our estimate\n-   Use a $t$-distribution with $df=n-2$ to find $q$\n\n<br>\n\n. . .\n\nWe'll need different SEs depending on if we are building a\n\n-   confidence interval for $\\widehat{\\mu}(Y|X_0)$\n\n-   prediction interval for $\\widehat{y}$ or $\\text{Pred}(Y|X_0)$\n\n## Standard errors\n\n$\\text{SE}(\\widehat{\\mu}(Y|X)) = \\widehat{\\sigma} \\sqrt{\\dfrac{1}{n} + \\dfrac{(x_0-\\overline{x})^2}{\\sum_{i=1}^n (x_i - \\overline{x})^2}}$\n\n. . .\n\n$\\text{SE}(\\widehat{y})= \\widehat{\\sigma} \\sqrt{1+\\dfrac{1}{n} + \\dfrac{(x_0-\\overline{x})^2}{\\sum_{i=1}^n (x_i - \\overline{x})^2}}$\n\n::: {.fragment .fade-in-then-out}\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M64 64a64 64 0 1 1 128 0A64 64 0 1 1 64 64zM25.9 233.4C29.3 191.9 64 160 105.6 160h44.8c27 0 51 13.4 65.5 34.1c-2.7 1.9-5.2 4-7.5 6.3l-64 64c-21.9 21.9-21.9 57.3 0 79.2L192 391.2V464c0 26.5-21.5 48-48 48H112c-26.5 0-48-21.5-48-48V348.3c-26.5-9.5-44.7-35.8-42.2-65.6l4.1-49.3zM448 64a64 64 0 1 1 128 0A64 64 0 1 1 448 64zM431.6 200.4c-2.3-2.3-4.9-4.4-7.5-6.3c14.5-20.7 38.6-34.1 65.5-34.1h44.8c41.6 0 76.3 31.9 79.7 73.4l4.1 49.3c2.5 29.8-15.7 56.1-42.2 65.6V464c0 26.5-21.5 48-48 48H496c-26.5 0-48-21.5-48-48V391.2l47.6-47.6c21.9-21.9 21.9-57.3 0-79.2l-64-64zM272 240v32h96V240c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l64 64c9.4 9.4 9.4 24.6 0 33.9l-64 64c-6.9 6.9-17.2 8.9-26.2 5.2s-14.8-12.5-14.8-22.2V336H272v32c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-64-64c-9.4-9.4-9.4-24.6 0-33.9l64-64c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2z\"/></svg>`{=html} Looking at the standard errors for the two intervals, which interval will be wider? Why does this make sense?\n:::\n\n::: {.fragment .fade-in}\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M64 64a64 64 0 1 1 128 0A64 64 0 1 1 64 64zM25.9 233.4C29.3 191.9 64 160 105.6 160h44.8c27 0 51 13.4 65.5 34.1c-2.7 1.9-5.2 4-7.5 6.3l-64 64c-21.9 21.9-21.9 57.3 0 79.2L192 391.2V464c0 26.5-21.5 48-48 48H112c-26.5 0-48-21.5-48-48V348.3c-26.5-9.5-44.7-35.8-42.2-65.6l4.1-49.3zM448 64a64 64 0 1 1 128 0A64 64 0 1 1 448 64zM431.6 200.4c-2.3-2.3-4.9-4.4-7.5-6.3c14.5-20.7 38.6-34.1 65.5-34.1h44.8c41.6 0 76.3 31.9 79.7 73.4l4.1 49.3c2.5 29.8-15.7 56.1-42.2 65.6V464c0 26.5-21.5 48-48 48H496c-26.5 0-48-21.5-48-48V391.2l47.6-47.6c21.9-21.9 21.9-57.3 0-79.2l-64-64zM272 240v32h96V240c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l64 64c9.4 9.4 9.4 24.6 0 33.9l-64 64c-6.9 6.9-17.2 8.9-26.2 5.2s-14.8-12.5-14.8-22.2V336H272v32c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-64-64c-9.4-9.4-9.4-24.6 0-33.9l64-64c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2z\"/></svg>`{=html} As $x_0$ gets farther from $\\overline{x}$ what happens to the standard errors?\n:::\n\n## R: Point estimate\n\nWe'll let R do the computational work\n\n\n\n`predict` allows you to quickly calculate the value of $\\widehat{y}$ for a given $x$ (or vector of $x$s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(car_lm, newdata = data.frame(Mileage = 8221))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n23346.27 \n```\n\n\n:::\n:::\n\n\n## R: Intervals\n\nThe `interval` argument allows you to specify the type of interval you want\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(car_lm, newdata = data.frame(Mileage = 8221), \n        interval = \"confidence\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       fit      lwr      upr\n1 23346.27 22170.67 24521.86\n```\n\n\n:::\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(car_lm, newdata = data.frame(Mileage = 8221), \n        interval = \"prediction\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       fit      lwr      upr\n1 23346.27 4094.689 42597.85\n```\n\n\n:::\n:::\n\n\n## R: SEs\n\nAdding `se.fit = TRUE`returns the necessary standard errors for \"by hand\" calculations\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n$fit\n       1 \n23346.27 \n\n$se.fit\n[1] 598.8985\n\n$df\n[1] 802\n\n$residual.scale\n[1] 9789.288\n```\n\n\n:::\n:::\n\n\n\n## Activity\n\n-   Work with a neighbor\n\n-   Work through the inference for prediction example on the worksheet\n\n-   The R tutorial is linked on Moodle, also can follow the QR code\n\n![](images/clipboard-1954158138.png){width=\"750\"}\n\n## Conditions required for inference\n\nOur model must be valid for inference to be valid\n\n$y_i = \\beta_0 + \\beta_1 x_i + \\varepsilon_i$ where $\\varepsilon_i \\overset{\\rm iid}{\\sim} N (0, \\sigma^2)$\n\n<br>\n\nConditions to check:\n\n-   Linear relationship is appropriate\n-   Errors are independent and identically distributed (iid)\n-   Errors are normally distributed\n-   Variance of the errors doesn't depend on $x$\n\n## Regression conditions {.smaller}\n\nWhat happens if our assumptions aren't valid?\n\n-   **Linearity:** if nonlinear, everything breaks!\n\n-   **Independence:** estimates are still unbiased (i.e. we fit the right line) but measures of the accuracy of those estimates (the SEs) are typically too small\n\n-   **Normality:** estimates are still unbiased (i.e. we fit the right line), SEs are correct BUT confidence/prediction intervals are wrong (we can't use t-distribution)\n\n-   **Constant error variance:** estimates are still unbiased but standard errors are wrong (and we don't know how wrong)\n\n# RMarkdown demo\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}