---
title: "Additional Inferential Tools for MLR"
subtitle: "Stat 230: Applied Regression Analysis"
format: 
  revealjs:
    theme: [serif, styles.scss]
    scrollable: true
editor: source
editor_options: 
  chunk_output_type: console
code-annotations: hover
---

```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = TRUE, dev = 'svg', comment = NULL)

library(ggformula)
library(dplyr)
library(broom)
library(gridExtra)
library(effects)
library(ggthemes)
library(forcats)
library(here)
library(gt)
library(gtsummary)
fev <- read.table(here("data/FEVdataAge10to19.txt"), sep = "\t", header = TRUE)

smoke.binary <- fev$Smoke
fev$Smoke <- factor(fev$Smoke, labels = c("Nonsmoker", "Smoker"))

options(digits=4) # display four significant digits by default

theme_classic <- function() {
  ggplot2::theme_classic() +
    ggplot2::theme(
      plot.background = ggplot2::element_rect(fill = "#fffef5", color = NA),
      panel.background = ggplot2::element_rect(fill = "#fffef5", color = NA),
      axis.line = ggplot2::element_line(color = "#003069"),
      axis.text = ggplot2::element_text(color = "#003069"),
      axis.ticks = ggplot2::element_line(color = "#003069"),
      axis.title = ggplot2::element_text(color = "#003069")
    )
}

graph_paper <- ggplot(data = data.frame(x = 0:20, y = 0:20), aes(x, y)) +
  theme_classic() +
  scale_x_continuous(name = "Age", breaks = seq(0, 20, by = 2), expand = c(0, 0)) +
  scale_y_continuous(name = "FEV", breaks = seq(0, 20, by = 2), expand = c(0, 0)) +
  theme(  
    panel.grid.major = element_line(color = "gray60", size = 0.5), # Major grid lines
    panel.grid.minor = element_line(color = "gray60", size = 0.25), # Minor grid lines
  )

# set ggplot2 theme
ggplot2::theme_set(theme_classic())
```

# Linear Combinations


## FEV example

```{r echo=FALSE , fig.width = 4, fig.height = 3, fig.align='center', out.width = "60%"}
#| warning: false
nonsmoke.mean <- function(age) 0.7574802 + 0.2028886 * age
smoke.mean <- function(age) (0.7574802 + 1.3071504) + (0.2028886 -0.1128448) * age
ggplot(data = fev, mapping = aes(x = Age, y = FEV, color = Smoke, shape = Smoke)) +
  geom_point( alpha = 0.5) +
  geom_lm(aes(color = Smoke)) + 
  scale_color_manual(values = c("#f15a31", "#000036")) +
  labs(y = "FEV (in L/s)") +
  theme(legend.position = "top")
```

## FEV example

$${\rm E}(Y|X) = \beta_0 + \beta_1 {\tt age} + \beta_2 {\tt smoke} + \beta_3 {\tt age \times smoke}$$
<br>

. . .

Mean functions for each group

. . .

:::columns
:::{.column width="30%"}
Smokers:
:::
:::{.column width="70%"}
${\rm E}(Y|X) = (\beta_0 + \beta_2) + (\beta_1 + \beta_3) {\tt age}$
:::
:::


. . .

:::columns
:::{.column width="30%"}
Non-smokers:
:::
:::{.column width="70%"}
${\rm E}(Y|X) = \beta_0 + \beta_1  {\tt age}$
:::
:::


## SEs for linear combinations



Estimate: 

$$\widehat{\gamma} = c_1 \widehat{\beta}_i + c_2 \widehat{\beta}_j$$


<br> 

. . .

Standard error:

:::{style="font-size: 0.9em"}

$$
SE(\widehat{\gamma}) = \sqrt{c_1^2 \lbrace SE(\widehat{\beta}_i)\rbrace^2 + c_2^2 \lbrace SE(\widehat{\beta}_j) \rbrace^2 + 2c_1c_2 Cov(\widehat{\beta}_i, \widehat{\beta}_j)} 
$$
:::



## FEV example

:::{.callout-warning}
Our standard table of coefficients doesn't contain the SEs we need to construct CIs or perform tests for these linear combinations.
:::

```{r}
#| echo: false
fev_lm <- lm(FEV ~ Age * Smoke, data = fev)
fev_coefs <- fev_lm |> broom::tidy()


fev_coefs |> 
  mutate(p.value = style_pvalue(p.value)) |>
  gt() |> 
  fmt_number(columns = c(estimate, std.error, statistic), decimals = 3) |>
  fmt_number(columns = p.value, decimals = 4) |>
  tab_options(
    table.font.size = px(28),
    table.background.color = "#fffef5",
    table.font.color = "#003069"
  )
```

## Covariance matrix

- The diagonal (top left to lower right) displays variances, $\lbrace SE(\widehat{\beta}_j) \rbrace^2$

- The off-diagonals display covariances, $Cov(\widehat{\beta}_i, \widehat{\beta}_j)$

- Covariance is like correlation, but not scaled to be between $-1$ and $1$

```{r}
#| echo: false
vcov(fev_lm)
```

## SE for a linear combination

:::{style="font-size: 0.9em;"}
Smokers: ${\rm E}(Y|X) = (\beta_0 + \beta_2) + (\beta_1 + \beta_3) {\tt age}$

Target: $\widehat{\gamma} = \widehat{\beta}_1 + \widehat{\beta}_3$
:::
```{r}
#| echo: false
vcov(fev_lm)
```

. . .

:::{style="font-size: 0.8em;"}
$$
SE(\widehat{\gamma}) = \sqrt{c_1^2 \lbrace SE(\widehat{\beta}_1)\rbrace^2 + c_2^2 \lbrace SE(\widehat{\beta}_2) \rbrace^2 + 2c_1c_2 Cov(\widehat{\beta}_1, \widehat{\beta}_2)} 
$$
:::
. . .

:::{style="font-size: 0.8em;"}
$c_1 = 1$, $c_2 = 1$
:::

. . .

:::{style="font-size: 0.8em;"}
:::columns
:::{.column width="50%"}
$SE(\widehat{\beta_1})^2 = 0.0004423$
:::
:::{.column width="50%"}
$SE(\widehat{\beta_2})^2 = 0.0017798$
:::
:::
:::

. . .

:::{style="font-size: 0.8em;"}
$Cov(\widehat{\beta_1}, \widehat{\beta_2}) = -0.0004423$
:::

## CI for a linear combination

Once we have $SE(\widehat{\gamma})$, we can construct a CI as usual:

$$
\widehat{\gamma} \pm t^*_{n - (p+1)} \cdot SE(\widehat{\gamma})
$$

. . .

$\widehat{\gamma} = `r coef(fev_lm)[2] + coef(fev_lm)[4]`$

. . . 

```{r}
#| include: false
V <- vcov(fev_lm)
SE_gamma <- sqrt(V[2,2] + V[4,4] + 2*V[2,4])
```


$SE(\widehat{\gamma}) = `r SE_gamma`$

. . . 

$df = n - (p+1) = 345 - 4 = 341$

. . .

$t^*_{341} \approx 1.649$ for a 90% CI


## Test for a linear combination

We can also test hypotheses about linear combinations of coefficients using a t-test:

$H_0: \gamma = \gamma_0$ vs. $H_a: \gamma \underset{>}{\overset{<}{\ne}} \gamma_0$


$t = \dfrac{\widehat{\gamma} - \gamma_0}{SE(\widehat{\gamma})}$

Reference distribution: $t_{n-(p+1)}$


## Example

- Work through the example on the handout with your neighbors

- Be prepared to share your strategy with the class

# Extra Sums of Squares F-tests


## Example: Used car prices

We have data on used car prices, including:

- `Price`: Price (in dollars)
- `Mileage`: Mileage (in thousands of miles)
- `Make`: Manufacturer (Buick, Cadillac, Chevrolet, Pontiac, SAAB, Saturn)


After some initial EDA, researchers want to fit an MLR model to predict $\log$(price) using mileage and make.




```{r}
#| echo: false
cars <- read.csv("https://aloy.rbind.io/kuiper_data/cars.csv")
```

## Used car prices

Is `Make` a useful predictor of price, after accounting for `Mileage`?

```{r}
#| echo: false
car_lm <- lm(log(Price) ~ Mileage + Make, data = cars)
car_coefs <- car_lm |> broom::tidy()


car_coefs |> 
  mutate(p.value = style_pvalue(p.value)) |>
  gt() |> 
  fmt_number(columns = c(estimate, std.error, statistic), decimals = 3) |>
  fmt_number(columns = p.value, decimals = 4) |>
  tab_options(
    table.font.size = px(28),
    table.background.color = "#fffef5",
    table.font.color = "#003069"
  )
```


## Review: Nested models

:::{style="font-size: 0.8em;"}
Model 1: 
<br>
${\rm E}(\log(Y)|X) = \beta_0 + \beta_1 {\tt Mileage}$

<br>

Model 2: <br>

$\begin{split}
{\rm E}(\log(Y)|X) = \beta_0 &+ \beta_1 {\tt Mileage} + \beta_2 {\tt Cadillac} + \beta_3 {\tt Chevy}\\
&+ \beta_4 {\tt Pontiac} + \beta_5 {\tt SAAB} + \beta_6 {\tt Saturn}
\end{split}
$
:::


. . . 

<br>

:::{style="font-size: 0.8em;"}
Extra SS F-test:

Null hypothesis tells us how we can simplify Model 2 (full) to get Model 1 (reduced):

$H_0$: $\beta_2 = \beta_3 = \beta_4 = \beta_5 = \beta_6 = 0$
:::

## Extra Sums of Squares

**Definition:** the marginal reduction in the error sum of squares when one (or more) explanatory variable(s) is added to the model 

<br>

. . . 

F-test for comparing nested models:

$F = \dfrac{(SSE_{full} - SSE_{reduced}) / (df_{full} - df_{reduced})}{MSE_{full}}$



## ANOVA table from R

:::{style="font-size: 0.8em;"}
`anova(car_lm)` produces an ANOVA table for the MLR model, it gives **sequential sums of squares**, not the extra sums of squares we need for our F-test.
:::

```{r}
#| echo: false
car_lm |> 
  anova() |> 
  tidy() |>
  mutate(p.value = style_pvalue(p.value)) |>
  gt() |>
  fmt_number(columns = c(sumsq, meansq, statistic), decimals = 3)  |>
  tab_options(
    table.font.size = px(28),
    table.background.color = "#fffef5",
    table.font.color = "#003069"
  )
```

```{r}
#| include: false
fit0 <- lm(log(Price) ~ 1, data = cars)
fit1 <- lm(log(Price) ~ Mileage, data = cars)
fit2 <- lm(log(Price) ~ Mileage + Make, data = cars)

anova(fit0, fit1, fit2, test = "F")
```

:::{style="font-size: 0.8em;"}
- `Mileage` row: extra SS for `Mileage` (compared to intercept-only model)
- `Make` row: extra SS for `Make` after accounting for `Mileage`
- `Residuals` row: SSE for the full model
:::